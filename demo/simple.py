import threading
import time
from renderer import static_font
from renderer.pixel_canvas import PixelCanvas
from renderer.pixel_element import PixelElement
from renderer.pixel_renderer import Renderer
from renderer.color import *
from tools.pixel_display import PixelDisplay

from component import loggers


gif = np.array([
    [[0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0]]
    ,
    [[4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153]]
    ,
    [[4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171]]
    ,
    [[4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904]]
    ,
    [[4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977]]
    ,
    [[4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022]]
    ,
    [[4278255581, 4278255581, 4278255581, 4278255581, 4278255581, 4278255581],
     [4278255581, 4278255581, 4278255581, 4278255581, 4278255581, 4278255581],
     [4278255581, 4278255581, 4278255581, 4278255581, 4278255581, 4278255581],
     [4278255581, 4278255581, 4278255581, 4278255581, 4278255581, 4278255581],
     [4278255581, 4278255581, 4278255581, 4278255581, 4278255581, 4278255581],
     [4278255581, 4278255581, 4278255581, 4278255581, 4278255581, 4278255581]]
    ,
    [[4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022],
     [4278244022, 4278244022, 4278244022, 4278244022, 4278244022, 4278244022]]
    ,
    [[4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977],
     [4278232977, 4278232977, 4278232977, 4278232977, 4278232977, 4278232977]]
    ,
    [[4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904],
     [4278220904, 4278220904, 4278220904, 4278220904, 4278220904, 4278220904]]
    ,
    [[4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171],
     [4278212171, 4278212171, 4278212171, 4278212171, 4278212171, 4278212171]]
    ,
    [[4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153],
     [4278202153, 4278202153, 4278202153, 4278202153, 4278202153, 4278202153]]
    ,
    [[0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 0]]
    ,
], dtype='uint32')

class ShowThread (threading.Thread):
    def __init__(self, threadID, name, canvas):

        threading.Thread.__init__(self)
        self.threadID = threadID
        self.name = name
        self.canvas = canvas

    def run(self):
        # 停顿1秒
        time.sleep(1)
        # 使用静态资源'数字3'初始化一个元素，颜色为0xff00ff
        color_style = get_color_style((5, 5), RGBA(0xff,0xff,0,0xff))
        element = PixelElement(element_type='dynamic',element_style=gif)
        self.canvas.put_element(element_name='4',element=element,layer=2,position=(1,1),effector_name='default')
        time.sleep(1)

        element = PixelElement(element_type='static',element_mask=static_font.num_3_mask,color_style=color_style)
        # 将元素放置于画布上
        self.canvas.put_element(element_name='3',element=element,layer=1,position=(1,12),effector_name='fade')
        time.sleep(1)
        self.canvas.change_element_position('3',(2,20),'fade')
        time.sleep(0.5)

        # self.canvas.change_element_position('4',(1,13),'default')
        # time.sleep(1)

        self.canvas.remove_element('3','fade')




if __name__ == '__main__':
    loggers.logging_init()
    logger = loggers.get_logger()
    logger.info('You are in dev mode. ')
    # 定义一个画布
    pixel_canvas = PixelCanvas((8,32))
    tool = PixelDisplay()
    show_thread = ShowThread(1,'show',pixel_canvas)
    show_thread.start()
    while True:
        result = pixel_canvas.renderer.render()
        tool.set_all(result)
        time.sleep(0.05)
